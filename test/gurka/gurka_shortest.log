Running main() from /Users/cpark/Desktop/valhalla/third_party/googletest/googletest/src/gtest_main.cc
[==========] Running 8 tests from 2 test suites.
[----------] Global test environment set-up.
[----------] 7 tests from ShortestTest
[          ] generating map PBF at test/data/shortest/map.pbf
[          ] building tiles in test/data/shortest
[ RUN      ] ShortestTest.AutoShortest
[          ] route with mjolnir.tile_dir = test/data/shortest with locations A,E with costing auto
[          ] Valhalla request is: {"locations":[{"lon":0.0,"lat":-0.00035932481790721993,"type":"break"},{"lon":0.0017966240894892047,"lat":-0.00035932481790721993,"type":"break"}],"costing":"auto","costing_options":{"auto":{"speed_types":["freeflow","constrained","predicted"]}},"verbose":true,"shape_match":"map_snap"}
[          ] route with mjolnir.tile_dir = test/data/shortest with locations A,E with costing auto
[          ] Valhalla request is: {"locations":[{"lon":0.0,"lat":-0.00035932481790721993,"type":"break"},{"lon":0.0017966240894892047,"lat":-0.00035932481790721993,"type":"break"}],"costing":"auto","costing_options":{"auto":{"speed_types":["freeflow","constrained","predicted"],"shortest":"1"}},"verbose":true,"shape_match":"map_snap"}
[       OK ] ShortestTest.AutoShortest (125 ms)
[ RUN      ] ShortestTest.TruckShortest
[          ] route with mjolnir.tile_dir = test/data/shortest with locations A,E with costing truck
[          ] Valhalla request is: {"locations":[{"lon":0.0,"lat":-0.00035932481790721993,"type":"break"},{"lon":0.0017966240894892047,"lat":-0.00035932481790721993,"type":"break"}],"costing":"truck","costing_options":{"truck":{"speed_types":["freeflow","constrained","predicted"]}},"verbose":true,"shape_match":"map_snap"}
[          ] route with mjolnir.tile_dir = test/data/shortest with locations A,E with costing truck
[          ] Valhalla request is: {"locations":[{"lon":0.0,"lat":-0.00035932481790721993,"type":"break"},{"lon":0.0017966240894892047,"lat":-0.00035932481790721993,"type":"break"}],"costing":"truck","costing_options":{"truck":{"speed_types":["freeflow","constrained","predicted"],"shortest":"1"}},"verbose":true,"shape_match":"map_snap"}
[       OK ] ShortestTest.TruckShortest (5 ms)
[ RUN      ] ShortestTest.MotorbikeShortest
[          ] route with mjolnir.tile_dir = test/data/shortest with locations A,E with costing motorcycle
[          ] Valhalla request is: {"locations":[{"lon":0.0,"lat":-0.00035932481790721993,"type":"break"},{"lon":0.0017966240894892047,"lat":-0.00035932481790721993,"type":"break"}],"costing":"motorcycle","costing_options":{"motorcycle":{"speed_types":["freeflow","constrained","predicted"]}},"verbose":true,"shape_match":"map_snap"}
[          ] route with mjolnir.tile_dir = test/data/shortest with locations A,E with costing motorcycle
[          ] Valhalla request is: {"locations":[{"lon":0.0,"lat":-0.00035932481790721993,"type":"break"},{"lon":0.0017966240894892047,"lat":-0.00035932481790721993,"type":"break"}],"costing":"motorcycle","costing_options":{"motorcycle":{"speed_types":["freeflow","constrained","predicted"],"shortest":"1"}},"verbose":true,"shape_match":"map_snap"}
[       OK ] ShortestTest.MotorbikeShortest (6 ms)
[ RUN      ] ShortestTest.BikeShortest
[          ] route with mjolnir.tile_dir = test/data/shortest with locations A,E with costing bicycle
[          ] Valhalla request is: {"locations":[{"lon":0.0,"lat":-0.00035932481790721993,"type":"break"},{"lon":0.0017966240894892047,"lat":-0.00035932481790721993,"type":"break"}],"costing":"bicycle","costing_options":{"bicycle":{"speed_types":["freeflow","constrained","predicted"]}},"verbose":true,"shape_match":"map_snap"}
[          ] route with mjolnir.tile_dir = test/data/shortest with locations A,E with costing bicycle
[          ] Valhalla request is: {"locations":[{"lon":0.0,"lat":-0.00035932481790721993,"type":"break"},{"lon":0.0017966240894892047,"lat":-0.00035932481790721993,"type":"break"}],"costing":"bicycle","costing_options":{"bicycle":{"speed_types":["freeflow","constrained","predicted"],"shortest":"1"}},"verbose":true,"shape_match":"map_snap"}
[       OK ] ShortestTest.BikeShortest (5 ms)
[ RUN      ] ShortestTest.PedestrianShortest
[          ] route with mjolnir.tile_dir = test/data/shortest with locations A,E with costing pedestrian
[          ] Valhalla request is: {"locations":[{"lon":0.0,"lat":-0.00035932481790721993,"type":"break"},{"lon":0.0017966240894892047,"lat":-0.00035932481790721993,"type":"break"}],"costing":"pedestrian","costing_options":{"pedestrian":{"speed_types":["freeflow","constrained","predicted"],"sidewalk_factor":"0.1"}},"verbose":true,"shape_match":"map_snap"}
[          ] route with mjolnir.tile_dir = test/data/shortest with locations A,E with costing pedestrian
[          ] Valhalla request is: {"locations":[{"lon":0.0,"lat":-0.00035932481790721993,"type":"break"},{"lon":0.0017966240894892047,"lat":-0.00035932481790721993,"type":"break"}],"costing":"pedestrian","costing_options":{"pedestrian":{"speed_types":["freeflow","constrained","predicted"],"shortest":"1"}},"verbose":true,"shape_match":"map_snap"}
[       OK ] ShortestTest.PedestrianShortest (5 ms)
[ RUN      ] ShortestTest.ScooterShortest
[          ] route with mjolnir.tile_dir = test/data/shortest with locations A,E with costing motor_scooter
[          ] Valhalla request is: {"locations":[{"lon":0.0,"lat":-0.00035932481790721993,"type":"break"},{"lon":0.0017966240894892047,"lat":-0.00035932481790721993,"type":"break"}],"costing":"motor_scooter","costing_options":{"motor_scooter":{"speed_types":["freeflow","constrained","predicted"]}},"verbose":true,"shape_match":"map_snap"}
[          ] route with mjolnir.tile_dir = test/data/shortest with locations A,E with costing motor_scooter
[          ] Valhalla request is: {"locations":[{"lon":0.0,"lat":-0.00035932481790721993,"type":"break"},{"lon":0.0017966240894892047,"lat":-0.00035932481790721993,"type":"break"}],"costing":"motor_scooter","costing_options":{"motor_scooter":{"speed_types":["freeflow","constrained","predicted"],"shortest":"1"}},"verbose":true,"shape_match":"map_snap"}
[       OK ] ShortestTest.ScooterShortest (5 ms)
[ RUN      ] ShortestTest.AutoUseDistance
[          ] route with mjolnir.tile_dir = test/data/shortest with locations A,E with costing auto
[          ] Valhalla request is: {"locations":[{"lon":0.0,"lat":-0.00035932481790721993,"type":"break"},{"lon":0.0017966240894892047,"lat":-0.00035932481790721993,"type":"break"}],"costing":"auto","costing_options":{"auto":{"speed_types":["freeflow","constrained","predicted"]}},"verbose":true,"shape_match":"map_snap"}
[          ] route with mjolnir.tile_dir = test/data/shortest with locations A,E with costing auto
[          ] Valhalla request is: {"locations":[{"lon":0.0,"lat":-0.00035932481790721993,"type":"break"},{"lon":0.0017966240894892047,"lat":-0.00035932481790721993,"type":"break"}],"costing":"auto","costing_options":{"auto":{"speed_types":["freeflow","constrained","predicted"],"use_distance":"1"}},"verbose":true,"shape_match":"map_snap"}
[       OK ] ShortestTest.AutoUseDistance (5 ms)
[----------] 7 tests from ShortestTest (160 ms total)

[----------] 1 test from AutoShorter
[ RUN      ] AutoShorter.deprecation
[       OK ] AutoShorter.deprecation (0 ms)
[----------] 1 test from AutoShorter (0 ms total)

[----------] Global test environment tear-down
[==========] 8 tests from 2 test suites ran. (375 ms total)
[  PASSED  ] 8 tests.
